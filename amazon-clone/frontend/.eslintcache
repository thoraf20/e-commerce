[{"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/App.js":"1","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/Screens/ProductScreen.js":"2","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/Screens/HomeScreen.js":"3","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/index.js":"4","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/store.js":"5","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/constants/productConstants.js":"6","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/actions/productAction.js":"7","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/reducers/productReducers.js":"8","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/Screens/CartScreen.js":"9","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/reducers/CartReducers.js":"10","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/constants/cardConstants.js":"11","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/actions/CartAction.js":"12"},{"size":1732,"mtime":1606292173730,"results":"13","hashOfConfig":"14"},{"size":2965,"mtime":1606259681511,"results":"15","hashOfConfig":"14"},{"size":1360,"mtime":1606234473846,"results":"16","hashOfConfig":"14"},{"size":290,"mtime":1606232048750,"results":"17","hashOfConfig":"14"},{"size":725,"mtime":1606336861694,"results":"18","hashOfConfig":"14"},{"size":372,"mtime":1606236725103,"results":"19","hashOfConfig":"14"},{"size":970,"mtime":1606236653183,"results":"20","hashOfConfig":"14"},{"size":1113,"mtime":1606257906533,"results":"21","hashOfConfig":"14"},{"size":3303,"mtime":1606336131513,"results":"22","hashOfConfig":"14"},{"size":726,"mtime":1606321209183,"results":"23","hashOfConfig":"14"},{"size":92,"mtime":1606320325705,"results":"24","hashOfConfig":"14"},{"size":694,"mtime":1606320308990,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"7c19n2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/App.js",[],["55","56"],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/Screens/ProductScreen.js",["57"],"import React,{useEffect, useState} from 'react';\nimport { Link } from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {detailsProduct} from \"../actions/productAction\";\n\nexport default function ProductScreen(props) {\n\n    const [qty, setQty] = useState(1);\n    const productDetails = useSelector(state => state.productDetails);\n    const {product, loading, error} = productDetails;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(detailsProduct(props.match.params.id));\n\n        return () => {\n            //\n        };\n    }, [])\n\n    const handleAddToCart = () => {\n        props.history.push(\"/cart/\" +props.match.params.id + \"?qty=\" + qty)\n    }\n\n    return (\n        <div className=\"conatiner\">\n            <div className=\"bact-to-result\">\n                <Link to=\"/\">Back to result</Link>\n            </div>\n            {loading ? <div>Loading...</div> :\n              error ? <div>{error}</div> :\n            \n            <div className=\"details\">\n                <div className=\"details-image\">\n                    <img src={product.image} alt=\"product\" />\n                </div>\n                <div className=\"details-info\">\n                    <ul>\n                        <li>\n                            <h4>{product.name}</h4>\n                        </li>\n                        <li>\n                            Price: <b>{product.price}</b>\n                        </li>\n                        <li>\n                            {product.rating} Stars ({product.numReview} Reviews)\n                        </li>\n                        <li>\n                            Description:\n                             <div>\n                                {product.description}\n                             </div>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"details-action\">\n                    <ul>\n                        <li>\n                            Price: {product.price}\n                        </li>\n                         <li>\n                            Status: {product.countInStock > 0 ? \"In Stock\" : \"Unavailable.\"}\n                        </li>\n                         <li>\n                            Qty: <select value={qty} onChange={(e) => {setQty(e.target.value)}}>\n                                {[...Array(product.countInStock).keys()].map(x =>\n                                    <option key={x+1} value={x+1}>{x+1}</option>\n                                )}\n                            </select>\n                        </li>\n                        <li>\n                            {product.countInStock > 0 && <button onClick={handleAddToCart} className=\"button-primary\">Add to cart</button>\n                             }\n                                    \n                        </li>\n                    </ul>\n                </div>\n\n            </div>\n            }\n        </div>\n    )\n}\n",["58","59"],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/Screens/HomeScreen.js",["60"],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/index.js",[],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/store.js",["61"],"import {combineReducers, compose, createStore} from \"redux\";\nimport {productDetailsReducer, productListReducer} from \"./reducers/productReducers\";\nimport { applyMiddleware } from \"redux\"\nimport {cartReducer} from \"./reducers/CartReducers\";\nimport thunk from \"redux-thunk\";\nimport Cookie from \"js-cookie\";\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || []\n\nconst initialState ={cart: {cartItems} };\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer\n});\n\nconst composeEnhacer = window._Redux_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\nconst store = createStore(reducer, initialState, compose(applyMiddleware(thunk)));\nexport default store;\n\n","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/constants/productConstants.js",[],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/actions/productAction.js",[],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/reducers/productReducers.js",[],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/Screens/CartScreen.js",["62"],"import React, { useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, removeFromCart } from \"../actions/CartAction\";\n\nfunction CartScreen(props){\n\n    const cart = useSelector((state) => state.cart);  \n    const { cartItems } = cart;\n\n    const productId = props.match.params.id;\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n    const dispatch = useDispatch();\n\n    const removeFromCartHandler = (productId) => {\n        dispatch(removeFromCart(productId));\n    }\n\n    useEffect(() =>{\n        if(productId){\n            dispatch(addToCart(productId, qty));\n        }\n    }, []);\n\n    const checkoutHandler = () =>{\n        props.history.push(\"/signin?redirct=shipping\");\n    }\n\n    return (\n    <div className=\"cart\">\n        <div className=\"cart-list\">\n            <ul className=\"cart-list-container\">\n                <li>\n                    <h3>\n                        Shopping Cart\n                    </h3>\n                    <div>\n                        Price\n                    </div>\n                </li>\n\n                    {\n                    cartItems.length === 0 ?\n                    <div>\n                        Cart is empty\n                    </div>\n                    :\n                    cartItems.map((item) =>\n                    <li>\n                        <div className=\"cart-image\">\n                            <img src={item.image} alt=\"product\" />\n                        </div>\n                        <div className=\"cart-name\">\n                            <div>\n                                <Link to={\"/product/\" + item.product}>\n                                 {item.name}\n                                </Link>\n                            </div>\n                            <div>\n                                Qty:\n                                <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                </select>\n                                <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)}>\n                                    Delete\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"cart-price\">\n                            {item.price}\n                        </div>\n                    </li>\n                        \n                    )\n                }\n               \n            </ul>\n\n        </div>\n        <div className=\"cart-action\">\n            <h3>\n                Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\n                :\n                $ {cartItems.reduce((a, c) => a + (c.qty * c.price.substring(1)), 0)}\n            </h3>\n            <button onClick={checkoutHandler} className=\"button-primary full-width\"  disabled={cartItems.length === 0}>\n                Proceed to Checkout\n            </button>\n        </div>\n    \n    </div>\n    )\n}\n\nexport default CartScreen;","/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/reducers/CartReducers.js",[],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/constants/cardConstants.js",[],"/Users/rauf/Desktop/e-commerce/amazon-clone/frontend/src/actions/CartAction.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":19,"column":8,"nodeType":"69","endLine":19,"endColumn":10,"suggestions":"70"},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"73","line":19,"column":6,"nodeType":"69","endLine":19,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":17,"column":7,"nodeType":"77","messageId":"78","endLine":17,"endColumn":21},{"ruleId":"67","severity":1,"message":"79","line":23,"column":8,"nodeType":"69","endLine":23,"endColumn":10,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["83"],["81"],["82"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["84"],"no-unused-vars","'composeEnhacer' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"92","text":"93"},"Update the dependencies array to be: [dispatch]",{"range":"94","text":"95"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"96","text":"97"},[587,589],"[dispatch, props.match.params.id]",[470,472],"[dispatch]",[706,708],"[dispatch, productId, qty]"]